---
# tasks file for securisation
- name: Update apt
  apt: update_cache=yes

- name: Install sudo
  apt: name=sudo state=present

- name: Add user {{ user.name }}
  user:
    name="{{ user.name }}"
    comment="Colin LEVERGER"
    state=present
    password={{ user.pwd }}
    groups=sudo
    append=yes

- name: Add {{ user.name }} sudo
  command: adduser {{ user.name }} sudo

- name: Install .bashrc for {{ user.name }} user
  template:
    src="templates/bashrc.j2"
    dest="/home/{{ user.name }}/.bashrc"
    owner={{ user.name }}

- name: Install pamlogin for {{ user.name }} user
  template:
    src="templates/pamlogin.sh.j2"
    dest="/etc/pam.d/pamlogin.sh"
    owner=root
    group=root
    mode=755

- name: Configure pamlogin for {{ user.name }} user
  template:
    src="templates/common-session.j2"
    dest="/etc/pam.d/common-session"
    owner=root
    group=root

# TODO http://bernaerts.dyndns.org/linux/75-debian/278-debian-sendmail-gmail-account

- name: Install fail2ban
  apt: name=fail2ban state=installed

- name: Configure fail2ban jail
  template:
    src: "template/jail.local.j2"
    dest: "/etc/fail2ban/jail.local"
    owner: root
    group: root

- name: Configure fail2ban filters
  template:
    src: "template/{{ item }}.j2"
    dest: "/etc/fail2ban/filter.d/{{ item }}"
    owner: root
    group: root
  with_items:
    - "nginx-http-auth.conf"
    - "nginx-noscript.conf"
    - "nginx-nohome.conf"
    - "nginx-noproxy.conf"

- name: Configure fail2ban filters from existing ones
  command: cp apache-badbots.conf nginx-badbots.conf

- name: Install rkhunter
  apt: name=rkhunter state=installed

- name: Create folder for authorized_keys {{ user.name }}
  file:
    path="/home/{{ user.name }}/.ssh/"
    state=directory
    mode=0755

- name: Add authorized_keys file
  template:
    src={{ my_key }}
    dest="/home/{{ user.name }}/.ssh/authorized_keys"
    owner="{{ user.name }}"
    group="{{ user.name }}"

- name: Disallow password authentication
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^PasswordAuthentication"
    line="PasswordAuthentication no"
    state=present
  notify:
    - restart ssh

- name: change SSHD port
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^Port 22"
    line="Port {{ssh_port}}"
    state=present
  notify:
    - restart ssh

- name: Allow only {{ user.name }} user to login
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^AllowUsers"
    line="AllowUsers {{ user.name }}"
    state=present
  notify:
    - restart ssh

- name: Disallow root SSH access
  lineinfile:
    dest=/etc/ssh/sshd_config
    regexp="^PermitRootLogin"
    line="PermitRootLogin no"
    state=present
  notify:
    - restart ssh
